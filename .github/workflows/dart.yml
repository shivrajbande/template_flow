name: Build Flutter APK's and App bundle

on:
  workflow_dispatch:
    inputs:
      client_name: 
        description: 'Client Id for Identifying Unique User'
        required: true
        type: string
      project_id:
        description: 'Project ID for indexing in DB for the build'
        required: true
        type: string
      package_name:
        description: 'Package name for the build'
        required: true
        type: string
      app_name:
        description: 'App Name/Label'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: '3.13.6'

      - run: 
          yes | flutter doctor --android-licenses
          flutter doctor -v

      - name: Install Flutter dependencies
        run: 
          flutter pub get

      - name: Create 'apk' Folder if Not Exist
        run: mkdir -p apk

      - name: Create APK Config JSON
        run: |
          echo '{
            "client_name": "${{inputs.client_name}}",
            "project_id": "${{ inputs.project_id }}",
            "package_name": "${{ inputs.package_name }}",
            "app_name": "${{ inputs.app_name }}"
          }' > code.json
          git config user.name "hemos811"
          git config user.email "811.hemanthkumar@gmail.com"
          git add code.json
          git commit -m "Added code.json using WorkFlow"
          git push

      - name: Show Code JSON File
        run: cat code.json

      - name: Use Input Values
        run: |
          PACKAGE_NAME="${{ inputs.package_name }}"
          APP_NAME="${{ inputs.app_name }}"
          echo "Using package name provided in workflow dispatch: $PACKAGE_NAME"
          echo "Using app name provided in workflow dispatch: $APP_NAME"
          dart run rename_app:main all="$APP_NAME"
          flutter pub run change_app_package_name:main "$PACKAGE_NAME"
          git add .
          git status
          git branch
          flutter doctor -v

      - name: Build APK
        run: flutter build apk --split-per-abi --release

      - name: Move APK Files to 'apk' Folder
        run: mv build/app/outputs/apk/release/*.apk apk/

      - name: List Changed Files
        run: git status

      - name: List Staged Files
        run: git diff --cached --name-only

      - name: Commit APKs to Repository
        run: |
          git add apk/*.apk
          git commit -m "Added Changed APK files"
          git push


          